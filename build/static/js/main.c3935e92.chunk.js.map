{"version":3,"sources":["redux/auth/auth-selectors.js","Components/NavBar/Navigation.jsx","avatar.jpg","Components/NavBar/UserMenu.jsx","Components/NavBar/AuthNav.jsx","Components/NavBar/AppBar.jsx","Components/PublicRoute.js","Components/PrivateRoute.js","Components/Loader/Loader.jsx","App.js","redux/contacts/contacts-reducer.js","redux/auth/auth-reducer.js","redux/store.js","index.js","redux/contacts/contacts-actions.js","form.module.css","redux/auth/auth-operations.js","Components/Contacts/Container.jsx","redux/auth/auth-actions.js"],"names":["state","auth","isAuthenticated","user","name","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","authSelectors","to","exact","style","activeStyle","getUserName","container","alignItems","avatar","marginRight","width","borderRadius","mapDispatchtoProps","onLogout","authOperations","logout","defaultAvatar","src","alt","type","className","s","button","onClick","AuthNav","getIsAuthenticated","header","justifyContent","borderBottom","IsAuthenticated","Component","component","redirectTo","routeProps","render","props","restricted","App","Container","form__container","title","height","HomeView","lazy","LoginView","ContactsView","RegisterView","this","onGetCurrentUser","fallback","path","mapDispatchToProps","getCurrentUser","filterReducer","createReducer","getFilter","_","payload","contactsReducer","fetchContactSuccess","addContactSuccess","filter","contact","number","length","alert","deleteContactSuccess","id","loadingReducer","addContactRequest","addContactError","deleteContactRequest","deleteContactError","fetchContactRequest","fetchContactError","contactsAppReducer","combineReducers","contacts","loading","initialUserState","email","registerSuccess","loginSuccess","getCurrentUserSuccess","loginError","getCurrentUserError","registerError","logoutSuccess","token","error","logoutError","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","contactsApp","persistReducer","authReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","devTools","process","persistor","persistStore","ReactDOM","StrictMode","document","getElementById","createAction","module","exports","axios","defaults","baseURL","set","headers","common","Authorization","unset","console","log","register","credentials","dispatch","a","registerRequest","post","data","message","login","loginRequest","logoutRequest","getState","persistedToken","getCurrentUserRequest","get","children"],"mappings":"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","file":"static/js/main.c3935e92.chunk.js","sourcesContent":["const getIsAuthenticated = state => state.auth.isAuthenticated;\r\nconst getUserName = state => state.auth.user.name;\r\n\r\nexport default {\r\n  getIsAuthenticated,\r\n  getUserName,\r\n};\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { connect } from 'react-redux'\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nconst Navigation = ({ isAuthenticated }) => (\r\n    <nav>\r\n        <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\r\n            Главная\r\n    </NavLink>\r\n\r\n        {isAuthenticated && <NavLink\r\n            to=\"/contacts\"\r\n            exact\r\n            style={styles.link}\r\n            activeStyle={styles.activeLink}\r\n        >\r\n            Заметки\r\n    </NavLink>}\r\n    </nav>\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n    isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n})\r\n\r\nexport default connect(mapStateToProps)(Navigation);","export default __webpack_public_path__ + \"static/media/avatar.6460b311.jpg\";","import { connect } from 'react-redux';\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\nimport authOperations from '../../redux/auth/auth-operations'\r\nimport s from '../../form.module.css'\r\nimport defaultAvatar from '../../avatar.jpg';\r\n\r\nconst { getUserName } = authSelectors\r\n\r\n\r\nconst styles = {\r\n    container: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: '10px 30px'\r\n    },\r\n    avatar: {\r\n        marginRight: 4,\r\n        width: '60px',\r\n        borderRadius: '50%'\r\n\r\n    },\r\n    name: {\r\n        fontWeight: 700,\r\n        marginRight: 12,\r\n    },\r\n};\r\n\r\nfunction UserMenu({ name, onLogout }) {\r\n    const avatar = defaultAvatar;\r\n\r\n    return (\r\n        <div style={styles.container}>\r\n            <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\r\n            <span style={styles.name}>Добро пожаловать, {name}</span>\r\n            <button type=\"button\" className={s.button} onClick={onLogout}>\r\n                Выйти\r\n      </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    name: getUserName(state)\r\n})\r\n\r\nconst mapDispatchtoProps = {\r\n    onLogout: authOperations.logout\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchtoProps)(UserMenu)","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nconst styles = {\r\n    link: {\r\n        display: 'inline-block',\r\n        textDecoration: 'none',\r\n        padding: 12,\r\n        fontWeight: 700,\r\n        color: '#2A363B',\r\n    },\r\n    activeLink: {\r\n        color: '#E84A5F',\r\n    },\r\n};\r\n\r\nexport default function AuthNav() {\r\n    return (\r\n        <div>\r\n            <NavLink\r\n                to=\"/register\"\r\n                exact\r\n                style={styles.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                Регистрация\r\n      </NavLink>\r\n            <NavLink\r\n                to=\"/login\"\r\n                exact\r\n                style={styles.link}\r\n                activeStyle={styles.activeLink}\r\n            >\r\n                Логин\r\n      </NavLink>\r\n        </div>\r\n    );\r\n}","import { connect } from 'react-redux';\r\nimport Navigation from './Navigation';\r\nimport UserMenu from './UserMenu';\r\nimport AuthNav from './AuthNav';\r\nimport authSelectors from '../../redux/auth/auth-selectors'\r\n\r\nconst { getIsAuthenticated } = authSelectors\r\n\r\nconst styles = {\r\n  header: {\r\n    display: 'flex',\r\n    justifyContent: 'space-between',\r\n    alignItems: 'center',\r\n    borderBottom: '1px solid #2A363B',\r\n  },\r\n};\r\n\r\nconst AppBar = ({ IsAuthenticated }) => {\r\n  return (\r\n    <header style={styles.header}>\r\n      <Navigation />\r\n      {IsAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </header>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  IsAuthenticated: getIsAuthenticated(state)\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppBar)","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\r\n * - В противном случае рендерит компонент\r\n */\r\nconst PublicRoute = ({ component: Component, isAuthenticated, redirectTo, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props =>\r\n      isAuthenticated && routeProps.restricted ? (\r\n        <Redirect to={redirectTo} />\r\n      ) : (\r\n        <Component {...props} />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PublicRoute);\r\n","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport authSelectors from '../redux/auth/auth-selectors';\r\n\r\n/**\r\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n * - В противном случае рендерит Redirect на /login\r\n */\r\nconst PrivateRoute = ({ component: Component, isAuthenticated, redirectTo, ...routeProps }) => (\r\n  <Route\r\n    {...routeProps}\r\n    render={props => (isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />)}\r\n  />\r\n);\r\n\r\nconst mapStateToProps = state => ({\r\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\r\n});\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);\r\n","import { Component } from 'react'\r\nimport s from '../../form.module.css'\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\nimport Container from '../Contacts/Container'\r\nexport default class App extends Component {\r\n    //other logic\r\n    render() {\r\n        return (\r\n            <Container className={s.form__container} title='Loading...'>\r\n                <Loader type=\"Bars\" color=\"#00BFFF\" height={80} width={80} />\r\n            </Container>\r\n\r\n        );\r\n    }\r\n}","import React, { Component, Suspense, lazy } from 'react';\r\nimport { Redirect } from 'react-router';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport Container from './Components/Contacts/Container';\r\nimport AppBar from './Components/NavBar/AppBar';\r\nimport authOperations from './redux/auth/auth-operations';\r\nimport { connect } from 'react-redux';\r\nimport PublicRoute from './Components/PublicRoute';\r\nimport PrivateRoute from './Components/PrivateRoute';\r\nimport Loader from './Components/Loader/Loader';\r\n\r\nconst HomeView = lazy(() => import('./Views/HomeView'));\r\nconst LoginView = lazy(() => import('./Views/LoginView'));\r\nconst ContactsView = lazy(() => import('./Views/ContactsView'));\r\nconst RegisterView = lazy(() => import('./Views/RegisterView'));\r\nclass App extends Component {\r\n  componentDidMount() {\r\n    this.props.onGetCurrentUser();\r\n  }\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <AppBar />\r\n        <Suspense fallback={<Loader />}>\r\n          <Switch>\r\n            <Redirect path=\"/goit-react-hw-08-phonebook\" to=\"/\" />\r\n            <Route exact path=\"/\" component={HomeView} />\r\n            <PublicRoute\r\n              path=\"/register\"\r\n              component={RegisterView}\r\n              restricted\r\n              redirectTo=\"/contacts\"\r\n            />\r\n            <PublicRoute path=\"/login\" restricted component={LoginView} redirectTo=\"/contacts\" />\r\n            <PrivateRoute path=\"/contacts\" component={ContactsView} redirectTo=\"/login\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  onGetCurrentUser: authOperations.getCurrentUser,\r\n};\r\nexport default connect(null, mapDispatchToProps)(App);\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\n\r\nimport {\r\n  addContactError,\r\n  addContactRequest,\r\n  addContactSuccess,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  deleteContactRequest,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n  getFilter,\r\n} from './contacts-actions';\r\n\r\nconst filterReducer = createReducer('', {\r\n  [getFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [fetchContactSuccess]: (_, { payload }) => payload,\r\n\r\n  [addContactSuccess]: (state, { payload }) => {\r\n    const existedContact = state.filter(\r\n      contact => contact.name === payload.name || contact.number === payload.number,\r\n    );\r\n    if (existedContact.length === 0) {\r\n      return [...state, { ...payload }];\r\n    } else {\r\n      alert('this contact or number already exist');\r\n      return state;\r\n    }\r\n  },\r\n\r\n  [deleteContactSuccess]: (state, { payload }) => state.filter(({ id }) => payload !== id),\r\n});\r\n\r\nconst loadingReducer = createReducer(false, {\r\n  [addContactRequest]: () => true,\r\n  [addContactSuccess]: () => false,\r\n  [addContactError]: () => false,\r\n  [deleteContactRequest]: () => true,\r\n  [deleteContactSuccess]: () => false,\r\n  [deleteContactError]: () => false,\r\n  [fetchContactRequest]: () => true,\r\n  [fetchContactSuccess]: () => false,\r\n  [fetchContactError]: () => false,\r\n});\r\n\r\nconst contactsAppReducer = combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  loading: loadingReducer,\r\n});\r\n\r\nexport default contactsAppReducer;\r\n","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n  registerError,\r\n  registerSuccess,\r\n  logoutError,\r\n  logoutSuccess,\r\n  loginError,\r\n  loginSuccess,\r\n  getCurrentUserError,\r\n  getCurrentUserSuccess,\r\n} from './auth-actions';\r\n\r\nconst initialUserState = { name: null, email: null };\r\n\r\nconst isAuthenticated = createReducer(false, {\r\n  [registerSuccess]: () => true,\r\n  [loginSuccess]: () => true,\r\n  [getCurrentUserSuccess]: () => true,\r\n  [loginError]: () => false,\r\n  [getCurrentUserError]: () => false,\r\n  [registerError]: () => false,\r\n  [logoutSuccess]: () => false,\r\n});\r\n\r\nconst user = createReducer(initialUserState, {\r\n  [registerSuccess]: (_, { payload }) => payload.user,\r\n  [loginSuccess]: (_, { payload }) => payload.user,\r\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\r\n  [logoutSuccess]: () => initialUserState,\r\n});\r\n\r\nconst token = createReducer(null, {\r\n  [registerSuccess]: (_, { payload }) => payload.token,\r\n  [loginSuccess]: (_, { payload }) => payload.token,\r\n  [logoutSuccess]: () => null,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [registerError]: (_, { payload }) => payload,\r\n  [loginError]: (_, { payload }) => payload,\r\n  [logoutError]: (_, { payload }) => payload,\r\n  [getCurrentUserError]: (_, { payload }) => payload,\r\n});\r\n\r\nexport default combineReducers({\r\n  isAuthenticated,\r\n  user,\r\n  token,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\n// import storage from 'redux-persist/lib/storage';\r\nimport contactsAppReducer from './contacts/contacts-reducer';\r\nimport authReducer from './auth/auth-reducer';\r\n\r\nconst authPersistConfig = {\r\n  key: 'auth',\r\n  storage,\r\n  whitelist: ['token'],\r\n};\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contactsApp: contactsAppReducer,\r\n    auth: persistReducer(authPersistConfig, authReducer),\r\n  },\r\n  middleware: getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/es/integration/react';\r\nimport store from './redux/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <BrowserRouter>\r\n          <App />\r\n        </BrowserRouter>\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteTodoRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteTodoSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const getFilter = createAction('app/getFilter');\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form__container\":\"form_form__container__1Mgil\",\"list__container\":\"form_list__container__1X5_f\",\"form\":\"form_form__gIUDK\",\"input\":\"form_input__2VVlU\",\"label\":\"form_label__3rKJx\",\"button\":\"form_button__BKaaf\"};","import axios from 'axios';\r\nimport {\r\n  registerError,\r\n  registerRequest,\r\n  registerSuccess,\r\n  logoutError,\r\n  logoutRequest,\r\n  logoutSuccess,\r\n  loginError,\r\n  loginRequest,\r\n  loginSuccess,\r\n  getCurrentUserError,\r\n  getCurrentUserRequest,\r\n  getCurrentUserSuccess,\r\n} from './auth-actions';\r\n\r\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\r\n\r\nconst token = {\r\n  set(token) {\r\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\r\n  },\r\n  unset() {\r\n    axios.defaults.headers.common.Authorization = '';\r\n    console.log(axios.defaults.headers);\r\n  },\r\n};\r\n\r\nconst register = credentials => async dispatch => {\r\n  dispatch(registerRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/signup', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(registerSuccess(data));\r\n  } catch (error) {\r\n    dispatch(registerError(error.message));\r\n  }\r\n};\r\n\r\nconst login = credentials => async dispatch => {\r\n  dispatch(loginRequest());\r\n\r\n  try {\r\n    const { data } = await axios.post('/users/login', credentials);\r\n\r\n    token.set(data.token);\r\n    dispatch(loginSuccess(data));\r\n  } catch (error) {\r\n    dispatch(loginError(error.message));\r\n  }\r\n};\r\n\r\nconst logout = () => async dispatch => {\r\n  dispatch(logoutRequest());\r\n\r\n  try {\r\n    await axios.post('/users/logout');\r\n\r\n    token.unset();\r\n    dispatch(logoutSuccess());\r\n  } catch (error) {\r\n    dispatch(logoutError(error.message));\r\n  }\r\n};\r\n\r\nconst getCurrentUser = () => async (dispatch, getState) => {\r\n  const {\r\n    auth: { token: persistedToken },\r\n  } = getState();\r\n\r\n  if (!persistedToken) return;\r\n\r\n  token.set(persistedToken);\r\n  dispatch(getCurrentUserRequest());\r\n  try {\r\n    const { data } = await axios.get('/users/current');\r\n\r\n    dispatch(getCurrentUserSuccess(data));\r\n  } catch (error) {\r\n    dispatch(getCurrentUserError(error.message));\r\n  }\r\n};\r\n\r\nexport default {\r\n  token,\r\n  register,\r\n  login,\r\n  logout,\r\n  getCurrentUser,\r\n};\r\n","export default function Container({ className, title, children }) {\r\n    return <div className={className}><h2>{title}</h2>{children}</div>\r\n}","import { createAction } from '@reduxjs/toolkit';\r\n\r\nexport const registerRequest = createAction('auth/registerRequest');\r\nexport const registerSuccess = createAction('auth/registerSuccess');\r\nexport const registerError = createAction('auth/registerError');\r\n\r\nexport const loginRequest = createAction('auth/loginRequest');\r\nexport const loginSuccess = createAction('auth/loginSuccess');\r\nexport const loginError = createAction('auth/loginError');\r\n\r\nexport const logoutRequest = createAction('auth/logoutRequest');\r\nexport const logoutSuccess = createAction('auth/logoutSuccess');\r\nexport const logoutError = createAction('auth/logoutError');\r\n\r\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\r\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\r\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\r\n"],"sourceRoot":""}