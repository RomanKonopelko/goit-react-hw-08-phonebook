{"version":3,"sources":["../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/Contacts/Form.jsx","Components/Contacts/Contact.jsx","redux/contacts/contacts-selectors.js","redux/contacts/contacts-operations.js","Components/Contacts/Filter.jsx","Views/ContactsView.js"],"names":["getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","Form","state","name","number","phonenumber","input","match","nameInputId","randomID","numberInputId","reset","setState","handleChange","e","currentTarget","value","isNaN","handleSubmit","preventDefault","alert","props","onSubmit","className","s","form","this","htmlFor","label","type","id","onChange","placeholder","button","Component","Contact","onDeleteContact","onClick","getLoading","contactsApp","loading","getFilteredContacts","createSelector","filter","contacts","normalizeFilter","contact","includes","dispatch","a","addContactRequest","axios","post","then","data","addContactSuccess","catch","error","addContactError","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","fetchContactRequest","get","fetchContactSuccess","fetchContactError","connect","filteredContacts","selectors","isLoading","operations","getFilter","actions","map","ContactsView","fetchContacts","Container","form__container","title","list__container"],"mappings":"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","file":"static/js/4.c73dc1e1.chunk.js","sourcesContent":["// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { Component } from 'react'\r\nimport { v4 as randomID } from 'uuid';\r\nimport s from '../../form.module.css'\r\n\r\nexport default class Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: ''\r\n    }\r\n\r\n    phonenumber = (input) => {\r\n        const phoneRegex = /^\\d{10}$/;\r\n        return input.match(phoneRegex) ? true : false\r\n    }\r\n    nameInputId = randomID();\r\n    numberInputId = randomID();\r\n\r\n    reset = () => {\r\n        this.setState({\r\n            name: '',\r\n            number: '',\r\n        });\r\n    };\r\n\r\n    handleChange = e => {\r\n        const { value, name } = e.currentTarget;\r\n        if (name === 'number') {\r\n            if (isNaN(value)) {\r\n                return\r\n            }\r\n        }\r\n        if (name === 'name') {\r\n            const letters = /^[a-zA-Z ]+(?:\\s[a-zA-Z]+)?$/\r\n            if (!value.match(letters) && value.length > 0) {\r\n                return\r\n            }\r\n        }\r\n        this.setState({\r\n            [name]: value,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.name.length === 0) {\r\n            return alert('Write your name')\r\n\r\n        }\r\n        if (!this.phonenumber(this.state.number)) {\r\n            return alert('An invalid number')\r\n        }\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n    }\r\n\r\n\r\n    render() {\r\n        return <form className={s.form} onSubmit={this.handleSubmit}>\r\n            <label htmlFor={this.nameInputId} className={s.label}>Name</label>\r\n            <input\r\n                type=\"text\"\r\n                id={this.nameInputId}\r\n                className={s.input}\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                onChange={this.handleChange}\r\n                placeholder='your name'\r\n            />\r\n            <br />\r\n            <label htmlFor={this.numberInputId} className={s.label}>Number</label>\r\n            <input\r\n                type=\"text\"\r\n                id={this.numberInputId}\r\n                className={s.input}\r\n                name=\"number\"\r\n                value={this.state.number}\r\n                onChange={this.handleChange}\r\n                placeholder=\"1234567890\"\r\n            />\r\n            <br />\r\n            <button type=\"submit\" className={s.button}>Add contact</button>\r\n        </form>\r\n    }\r\n}","export default function Contact({ id, name, number, onDeleteContact, s }) {\r\n    return (<li className=\"contact\" key={id}>\r\n        {name} {number}\r\n        <button\r\n            type=\"button\"\r\n            onClick={onDeleteContact}\r\n            className={s.button}>\r\n            delete\r\n                </button>\r\n    </li>)\r\n}","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nexport const getContacts = state => state.contactsApp.contacts;\r\n\r\nexport const getFilter = state => state.contactsApp.filter;\r\n\r\nexport const getLoading = state => state.contactsApp.loading;\r\n\r\nexport const getFilteredContacts = createSelector([getFilter, getContacts], (filter, contacts) => {\r\n  const normalizeFilter = filter.toLowerCase();\r\n  const filteredContacts = contacts.filter(\r\n    contact =>\r\n      contact.name.toLowerCase().includes(normalizeFilter) || contact.number.includes(filter),\r\n  );\r\n  return filteredContacts;\r\n});\r\n","import axios from 'axios';\r\nimport {\r\n  addContactSuccess,\r\n  addContactRequest,\r\n  addContactError,\r\n  deleteContactRequest,\r\n  deleteContactSuccess,\r\n  deleteContactError,\r\n  fetchContactError,\r\n  fetchContactRequest,\r\n  fetchContactSuccess,\r\n} from './contacts-actions';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(fetchContactRequest());\r\n\r\n  try {\r\n    const { data } = await axios.get('/contacts');\r\n    dispatch(fetchContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(fetchContactError(error));\r\n  }\r\n};\r\n\r\nconst addContact = ({ name, number }) => async dispatch => {\r\n  const contact = {\r\n    name,\r\n    number,\r\n  };\r\n\r\n  dispatch(addContactRequest());\r\n\r\n  axios\r\n    .post('/contacts', contact)\r\n    .then(({ data }) => dispatch(addContactSuccess(data)))\r\n    .catch(error => dispatch(addContactError(error)));\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(deleteContactRequest());\r\n\r\n  axios\r\n    .delete(`/contacts/${id}`)\r\n    .then(() => dispatch(deleteContactSuccess(id)))\r\n    .catch(error => dispatch(deleteContactError(error)));\r\n};\r\n\r\nexport default { addContact, deleteContact, fetchContacts };\r\n","import s from '../../form.module.css'\r\nimport Contact from './Contact'\r\nimport { v4 as randomID } from 'uuid';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/contacts/contacts-actions'\r\nimport * as selectors from '../../redux/contacts/contacts-selectors'\r\nimport operations from '../../redux/contacts/contacts-operations'\r\n\r\nconst Filter = ({ getFilter, onDeleteContact, filteredContacts, isLoading }) =>\r\n(<>\r\n    <label htmlFor=\"filter\">Search contact by number or name</label>\r\n    {isLoading && <h2>LOADING...</h2>}\r\n    <br />\r\n    <input\r\n        type=\"text\"\r\n        name=\"filter\"\r\n        id=\"filter\"\r\n        onChange={(e) => getFilter(e.currentTarget.value)} />\r\n    <ul className={s.form}>\r\n        {filteredContacts.map(({ id, name, number }) => {\r\n            return <Contact key={randomID()} id={id} name={name} number={number} onDeleteContact={() => {\r\n                onDeleteContact(id)\r\n            }} s={s} />\r\n        })}\r\n    </ul>\r\n</>\r\n)\r\n\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        filteredContacts: selectors.getFilteredContacts(state),\r\n        isLoading: selectors.getLoading(state)\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteContact: id => dispatch(operations.deleteContact(id)),\r\n        getFilter: value => dispatch(actions.getFilter(value)),\r\n    };\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Form from '../Components/Contacts/Form';\r\nimport Filter from '../Components/Contacts/Filter';\r\nimport operations from '../redux/contacts/contacts-operations';\r\nimport Container from '../Components/Contacts/Container';\r\nimport s from '../form.module.css';\r\n\r\nclass ContactsView extends Component {\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container className={s.form__container} title=\"Phonebook\">\r\n        <Form onSubmit={this.props.onSubmit} />\r\n        <Container className={s.list__container} title=\"Contacts\">\r\n          <Filter />\r\n        </Container>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onSubmit: data => dispatch(operations.addContact(data)),\r\n    fetchContacts: () => dispatch(operations.fetchContacts()),\r\n  };\r\n};\r\nexport default connect(null, mapDispatchToProps)(ContactsView);\r\n"],"sourceRoot":""}